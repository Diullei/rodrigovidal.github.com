{"id":"3","title":"Controle de Versão com Git - Parte 2","by":"Rodrigo Vidal","tags":["Git"],"category":"Git","date":"'2011-01-12'","deploy":"true","content":" \t\nVamos lá pessoal, na [parte 1](http://rodrigovidal.github.com/#!/post/2/Controle-de-Versão-com-Git---Parte-1), falei um pouco sobre os tipos de Sistemas de Controle de Versão. Seguindo..\n\nBom espero que voce tenha baixado o Msysgit , caso não tenha feito ainda acesse aqui. A instalação é padrão Windows.\n\nFeito isso teremos o bash do Git instalado que é parte do pacote MSYS, que é uma coleção de utilitários GNU como bash, make gawk e grep que permite utilizar programas e aplicações que dependem de ferramentas Unix para serem utilizadas.\n\n##Sua Identidade\n\nA primeira coisa a ser fazer é configurar a sua identidade no Git. Isso é importante porque por exemplo, todo Commit que você realizar utilizarão destas informações.\n\nRode os seguinte comandos no Bash\n\n<pre>\n<code>\n$ git config --global user.name Rodrigo Vidal\n$ git config --global user.email rodrigovidal777@gmail.com\n</code>\n</pre>\n\nApós ter configurado sua identidade, você pode verificar suas configurações globais com o comando\n\n<pre>\n<code>\n$ git config --list\n</code>\n</pre>\n\n##Conectando o Git ao Github\n\nO Github é na verdade uma rede social para desenvolvedores, onde é possivel contribuir para projetos opensource, acompanhar seu desenvolvimento e criar novos.\n\nPara que essa conexão entre o Git e o Github seja possivel você precisar criar uma chave local e informá-la ao Github.\n\n<pre>\n<code>\n$ mkdir .ssh\n$ cd ~/.ssh\n</code>\n</pre>\n\n<pre>\n<code>\n$ ssh-keygen -t rsa -C email@provedor.com\n</code>\n</pre>\n\nLogo aparecerá a seguinte mensagem:\n\nEnter file in which to save the key (/c/Users/Me/.ssh/id_rsa) \n\nPressione Enter. Em seguida será solicitado a criação de uma senha.\n\nAgora abra o arquivo id_rsa.pub gerado (Ex.: C:/Users/rodrigovidal/.ssh) com um editor de texto e copie todo o seu conteudo.\n\nVá ao GitHub -> Account Settings -> SSH Public Keys.\n\nClique em Add another public key. Dê um nome para a chavé pública que você criou . Cole o conteúdo do arquivo id_rsa.pub que você copiou no passo anterior no campo key.\n\nAgora basta salvar.\n\nPara testar a sua conexão com o GitHub digite no Bash:\n<pre>\n<code>\n$ ssh git@github.com\n</code>\n</pre>\n\nSe tudo deu certo você receberá uma mensagem dizendo que você foi autenticado com sucesso!\n\nEstou gostando muito de trabalhar com o Git em produção, é uma maneira diferente de pensar sobre controle de versão e existem algumas peculiaridades em relação aos outros sistemas. Nos próximos posts vamos falar sobre isso.\n\nBom pessoal por hoje é só.\n\nAbraço!\n","ref":"git_part2.post.mkdown"}